<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="namespacepenify__hook_1_1commands_1_1config__commands" kind="namespace" language="Python">
    <compoundname>penify_hook::commands::config_commands</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacepenify__hook_1_1commands_1_1config__commands_1a152642ab83cf6219b604bda6122aba67" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool penify_hook::commands::config_commands::DOTENV_AVAILABLE</definition>
        <argsstring></argsstring>
        <name>DOTENV_AVAILABLE</name>
        <qualifiedname>penify_hook.commands.config_commands.DOTENV_AVAILABLE</qualifiedname>
        <initializer>=  True</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" line="17" column="1" bodyfile="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepenify__hook_1_1commands_1_1config__commands_1a4b202072a3a3b8515c9c254622e9c880" prot="public" static="no" mutable="no">
        <type></type>
        <definition>penify_hook::commands::config_commands.path</definition>
        <argsstring></argsstring>
        <name>path</name>
        <qualifiedname>penify_hook.commands.config_commands.path</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" line="321" column="1" bodyfile="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" bodystart="321" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacepenify__hook_1_1commands_1_1config__commands_1aabe277132ce0bc0aacef951cf1dee2ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>None</type>
        <definition> None penify_hook.commands.config_commands.load_env_files</definition>
        <argsstring>()</argsstring>
        <name>load_env_files</name>
        <qualifiedname>penify_hook.commands.config_commands.load_env_files</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Load environment variables from .env files in various locations,
with proper priority (later files override earlier ones):
1. User home directory .env (lowest priority)
2. Git repo root directory .env (if in a git repo)
3. Current directory .env (highest priority)

This function is called when the module is imported, ensuring env variables
are available throughout the application lifecycle.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" line="22" column="1" bodyfile="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" bodystart="22" bodyend="64"/>
        <references refid="namespacepenify__hook_1_1commands_1_1config__commands_1aabe277132ce0bc0aacef951cf1dee2ae" compoundref="config__commands_8py" startline="22" endline="64">penify_hook.commands.config_commands.load_env_files</references>
        <references refid="namespacepenify__hook_1_1utils_1a95c3f9c80860d6a2e2d061d2fb660a3f" compoundref="utils_8py" startline="62" endline="72">penify_hook.utils.recursive_search_git_folder</references>
        <referencedby refid="namespacepenify__hook_1_1commands_1_1config__commands_1a15bf3685c4dcb5c15ba6a4055e484cf2" compoundref="config__commands_8py" startline="264" endline="292">penify_hook.commands.config_commands.get_jira_config</referencedby>
        <referencedby refid="namespacepenify__hook_1_1commands_1_1config__commands_1a6492bc8e7df6e38bb06ad05e572d4cc0" compoundref="config__commands_8py" startline="235" endline="263">penify_hook.commands.config_commands.get_llm_config</referencedby>
        <referencedby refid="namespacepenify__hook_1_1commands_1_1config__commands_1a5503d51c905e2f1b299b12d2a73bd812" compoundref="config__commands_8py" startline="553" endline="582">penify_hook.commands.config_commands.get_token</referencedby>
        <referencedby refid="namespacepenify__hook_1_1commands_1_1config__commands_1aabe277132ce0bc0aacef951cf1dee2ae" compoundref="config__commands_8py" startline="22" endline="64">penify_hook.commands.config_commands.load_env_files</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacepenify__hook_1_1commands_1_1config__commands_1a6559a82d0bf727703d550d1003d3ed20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Path</type>
        <definition> Path penify_hook.commands.config_commands.get_penify_config</definition>
        <argsstring>()</argsstring>
        <name>get_penify_config</name>
        <qualifiedname>penify_hook.commands.config_commands.get_penify_config</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get the home directory for the .penify configuration file.

This function searches for the `.penify` file in the current directory
and its parent directories until it finds it or reaches the home
directory. If not found, it creates the `.penify` directory and an empty
`config.json` file.

Returns:
    Path: The path to the `config.json` file within the `.penify` directory.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" line="68" column="1" bodyfile="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" bodystart="68" bodyend="104"/>
        <references refid="namespacepenify__hook_1_1utils_1a95c3f9c80860d6a2e2d061d2fb660a3f" compoundref="utils_8py" startline="62" endline="72">penify_hook.utils.recursive_search_git_folder</references>
        <referencedby refid="namespacepenify__hook_1_1commands_1_1config__commands_1a5503d51c905e2f1b299b12d2a73bd812" compoundref="config__commands_8py" startline="553" endline="582">penify_hook.commands.config_commands.get_token</referencedby>
        <referencedby refid="classtests_1_1test__config__commands_1_1TestConfigCommands_1a2e8162082bcdd5652bb37bdb14cf453a" compoundref="test__config__commands_8py" startline="22" endline="55">tests.test_config_commands.TestConfigCommands.test_get_penify_config_existing_dir</referencedby>
        <referencedby refid="classtests_1_1test__config__commands_1_1TestConfigCommands_1a33d4760eee3b67e1cde3aed755ebb948" compoundref="test__config__commands_8py" startline="60" endline="94">tests.test_config_commands.TestConfigCommands.test_get_penify_config_new_dir</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacepenify__hook_1_1commands_1_1config__commands_1a3caf2b062dd33b1f1d7ddc7224f0ff87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Any</type>
        <definition> Any penify_hook.commands.config_commands.get_env_var_or_default</definition>
        <argsstring>(str env_var, Any default=None)</argsstring>
        <name>get_env_var_or_default</name>
        <qualifiedname>penify_hook.commands.config_commands.get_env_var_or_default</qualifiedname>
        <param>
          <type>str</type>
          <declname>env_var</declname>
        </param>
        <param>
          <type>Any</type>
          <declname>default</declname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get environment variable or return default value.

Args:
    env_var: The environment variable name
    default: Default value if environment variable is not set
    
Returns:
    Value of the environment variable or default
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" line="105" column="1" bodyfile="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" bodystart="105" bodyend="118"/>
        <referencedby refid="namespacepenify__hook_1_1commands_1_1config__commands_1a15bf3685c4dcb5c15ba6a4055e484cf2" compoundref="config__commands_8py" startline="264" endline="292">penify_hook.commands.config_commands.get_jira_config</referencedby>
        <referencedby refid="namespacepenify__hook_1_1commands_1_1config__commands_1a6492bc8e7df6e38bb06ad05e572d4cc0" compoundref="config__commands_8py" startline="235" endline="263">penify_hook.commands.config_commands.get_llm_config</referencedby>
        <referencedby refid="namespacepenify__hook_1_1commands_1_1config__commands_1a5503d51c905e2f1b299b12d2a73bd812" compoundref="config__commands_8py" startline="553" endline="582">penify_hook.commands.config_commands.get_token</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacepenify__hook_1_1commands_1_1config__commands_1a4617bc5956e502c9555dc0dda0376df4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def penify_hook.commands.config_commands.save_llm_config</definition>
        <argsstring>(model, api_base, api_key)</argsstring>
        <name>save_llm_config</name>
        <qualifiedname>penify_hook.commands.config_commands.save_llm_config</qualifiedname>
        <param>
          <type>model</type>
          <defname>model</defname>
        </param>
        <param>
          <type>api_base</type>
          <defname>api_base</defname>
        </param>
        <param>
          <type>api_key</type>
          <defname>api_key</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Save LLM configuration settings to .env file.

This function saves LLM configuration in the following priority:
1. Git repo root .env (if inside a git repo)
2. User home directory .env
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" line="119" column="1" bodyfile="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" bodystart="119" bodyend="176"/>
        <references refid="namespacepenify__hook_1_1utils_1a95c3f9c80860d6a2e2d061d2fb660a3f" compoundref="utils_8py" startline="62" endline="72">penify_hook.utils.recursive_search_git_folder</references>
        <referencedby refid="namespacepenify__hook_1_1config__command_1a240e5331681eb574ac319d7458783bde" compoundref="config__command_8py" startline="41" endline="98">penify_hook.config_command.handle_config</referencedby>
        <referencedby refid="classtests_1_1test__config__commands_1_1TestConfigCommands_1a73a264dfb21e16003e095b79f6eab2ac" compoundref="test__config__commands_8py" startline="269" endline="300">tests.test_config_commands.TestConfigCommands.test_save_llm_config_failure</referencedby>
        <referencedby refid="classtests_1_1test__config__commands_1_1TestConfigCommands_1acd8df8219441b9e9871b903a681400d9" compoundref="test__config__commands_8py" startline="227" endline="265">tests.test_config_commands.TestConfigCommands.test_save_llm_config_success</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacepenify__hook_1_1commands_1_1config__commands_1ab2486ac2bf16b4a671e49625bfa4f9b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def penify_hook.commands.config_commands.save_jira_config</definition>
        <argsstring>(url, username, api_token)</argsstring>
        <name>save_jira_config</name>
        <qualifiedname>penify_hook.commands.config_commands.save_jira_config</qualifiedname>
        <param>
          <type>url</type>
          <defname>url</defname>
        </param>
        <param>
          <type>username</type>
          <defname>username</defname>
        </param>
        <param>
          <type>api_token</type>
          <defname>api_token</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Save JIRA configuration settings to .env file.

This function saves JIRA configuration in the following priority:
1. Git repo root .env (if inside a git repo)
2. User home directory .env
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" line="177" column="1" bodyfile="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" bodystart="177" bodyend="234"/>
        <references refid="namespacepenify__hook_1_1utils_1a95c3f9c80860d6a2e2d061d2fb660a3f" compoundref="utils_8py" startline="62" endline="72">penify_hook.utils.recursive_search_git_folder</references>
        <referencedby refid="namespacepenify__hook_1_1commands_1_1config__commands_1af115198ea5d6808ccb98733957f50b06" compoundref="config__commands_8py" startline="424" endline="552">penify_hook.commands.config_commands.config_jira_web</referencedby>
        <referencedby refid="namespacepenify__hook_1_1config__command_1a240e5331681eb574ac319d7458783bde" compoundref="config__command_8py" startline="41" endline="98">penify_hook.config_command.handle_config</referencedby>
        <referencedby refid="classtests_1_1test__config__commands_1_1TestConfigCommands_1af8d62310da2d768e21770f8f01ff5375" compoundref="test__config__commands_8py" startline="305" endline="345">tests.test_config_commands.TestConfigCommands.test_save_jira_config_success</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacepenify__hook_1_1commands_1_1config__commands_1a6492bc8e7df6e38bb06ad05e572d4cc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Dict[str, str]</type>
        <definition> Dict[str, str] penify_hook.commands.config_commands.get_llm_config</definition>
        <argsstring>()</argsstring>
        <name>get_llm_config</name>
        <qualifiedname>penify_hook.commands.config_commands.get_llm_config</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get LLM configuration from environment variables.

Environment variables:
- PENIFY_LLM_MODEL: Model name
- PENIFY_LLM_API_BASE: API base URL
- PENIFY_LLM_API_KEY: API key

Returns:
    dict: Configuration dictionary with model, api_base, and api_key
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" line="235" column="1" bodyfile="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" bodystart="235" bodyend="263"/>
        <references refid="namespacepenify__hook_1_1commands_1_1config__commands_1a3caf2b062dd33b1f1d7ddc7224f0ff87" compoundref="config__commands_8py" startline="105" endline="118">penify_hook.commands.config_commands.get_env_var_or_default</references>
        <references refid="namespacepenify__hook_1_1commands_1_1config__commands_1aabe277132ce0bc0aacef951cf1dee2ae" compoundref="config__commands_8py" startline="22" endline="64">penify_hook.commands.config_commands.load_env_files</references>
        <referencedby refid="namespacepenify__hook_1_1commands_1_1commit__commands_1af4f739f524c38b437e4e47673d683e23" compoundref="commit__commands_8py" startline="128" endline="169">penify_hook.commands.commit_commands.handle_commit</referencedby>
        <referencedby refid="classtests_1_1test__config__commands_1_1TestConfigCommands_1abd12f028b89aa9cd1152c0b9ece5d3cd" compoundref="test__config__commands_8py" startline="129" endline="154">tests.test_config_commands.TestConfigCommands.test_get_llm_config_empty</referencedby>
        <referencedby refid="classtests_1_1test__config__commands_1_1TestConfigCommands_1adf9f2233a3f4cc5725b9d4f05758b167" compoundref="test__config__commands_8py" startline="97" endline="126">tests.test_config_commands.TestConfigCommands.test_get_llm_config_exists</referencedby>
        <referencedby refid="classtests_1_1test__config__commands_1_1TestConfigCommands_1a473984d31452b56acd6ce4011a1248bd" compoundref="test__config__commands_8py" startline="158" endline="185">tests.test_config_commands.TestConfigCommands.test_get_llm_config_invalid_json</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacepenify__hook_1_1commands_1_1config__commands_1a15bf3685c4dcb5c15ba6a4055e484cf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Dict[str, str]</type>
        <definition> Dict[str, str] penify_hook.commands.config_commands.get_jira_config</definition>
        <argsstring>()</argsstring>
        <name>get_jira_config</name>
        <qualifiedname>penify_hook.commands.config_commands.get_jira_config</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get JIRA configuration from environment variables.

Environment variables:
- PENIFY_JIRA_URL: JIRA URL
- PENIFY_JIRA_USER: JIRA username
- PENIFY_JIRA_TOKEN: JIRA API token

Returns:
    dict: Configuration dictionary with url, username, and api_token
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" line="264" column="1" bodyfile="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" bodystart="264" bodyend="292"/>
        <references refid="namespacepenify__hook_1_1commands_1_1config__commands_1a3caf2b062dd33b1f1d7ddc7224f0ff87" compoundref="config__commands_8py" startline="105" endline="118">penify_hook.commands.config_commands.get_env_var_or_default</references>
        <references refid="namespacepenify__hook_1_1commands_1_1config__commands_1aabe277132ce0bc0aacef951cf1dee2ae" compoundref="config__commands_8py" startline="22" endline="64">penify_hook.commands.config_commands.load_env_files</references>
        <referencedby refid="namespacepenify__hook_1_1commands_1_1config__commands_1af115198ea5d6808ccb98733957f50b06" compoundref="config__commands_8py" startline="424" endline="552">penify_hook.commands.config_commands.config_jira_web</referencedby>
        <referencedby refid="namespacepenify__hook_1_1commands_1_1commit__commands_1af4f739f524c38b437e4e47673d683e23" compoundref="commit__commands_8py" startline="128" endline="169">penify_hook.commands.commit_commands.handle_commit</referencedby>
        <referencedby refid="classtests_1_1test__config__commands_1_1TestConfigCommands_1aee37b97432821d19758c6325d4c74bcf" compoundref="test__config__commands_8py" startline="188" endline="222">tests.test_config_commands.TestConfigCommands.test_get_jira_config_exists</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacepenify__hook_1_1commands_1_1config__commands_1a185dfc34a655ed80e6c95939b6f3c35c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def penify_hook.commands.config_commands.config_llm_web</definition>
        <argsstring>()</argsstring>
        <name>config_llm_web</name>
        <qualifiedname>penify_hook.commands.config_commands.config_llm_web</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Open a web browser interface for configuring LLM settings.

This function starts a temporary HTTP server that serves an HTML
template for configuring Large Language Model (LLM) settings. It handles
GET and POST requests to retrieve the current configuration, save new
configurations, and suppress log messages.  The server runs on a random
port between 30000 and 50000, and it is accessible via a URL like
http://localhost:&lt;redirect_port&gt;. The function opens this URL in the
default web browser for configuration. Once configured, the server shuts
down.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" line="293" column="1" bodyfile="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" bodystart="293" bodyend="423"/>
        <referencedby refid="namespacepenify__hook_1_1config__command_1a240e5331681eb574ac319d7458783bde" compoundref="config__command_8py" startline="41" endline="98">penify_hook.config_command.handle_config</referencedby>
        <referencedby refid="classtests_1_1test__web__config_1_1TestWebConfig_1afc6440352201d207ea8b4d26f8ccfa35" compoundref="test__web__config_8py" startline="18" endline="55">tests.test_web_config.TestWebConfig.test_config_llm_web_server_setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacepenify__hook_1_1commands_1_1config__commands_1af115198ea5d6808ccb98733957f50b06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def penify_hook.commands.config_commands.config_jira_web</definition>
        <argsstring>()</argsstring>
        <name>config_jira_web</name>
        <qualifiedname>penify_hook.commands.config_commands.config_jira_web</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Open a web browser interface for configuring JIRA settings.

This function sets up a simple HTTP server using Python&apos;s built-in
`http.server` module to handle GET and POST requests. The server serves
an HTML page for configuration and handles saving the JIRA configuration
details through API tokens and URLs. Upon successful configuration, it
shuts down the server gracefully.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" line="424" column="1" bodyfile="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" bodystart="424" bodyend="552"/>
        <references refid="namespacepenify__hook_1_1commands_1_1config__commands_1a15bf3685c4dcb5c15ba6a4055e484cf2" compoundref="config__commands_8py" startline="264" endline="292">penify_hook.commands.config_commands.get_jira_config</references>
        <references refid="namespacepenify__hook_1_1commands_1_1config__commands_1ab2486ac2bf16b4a671e49625bfa4f9b4" compoundref="config__commands_8py" startline="177" endline="234">penify_hook.commands.config_commands.save_jira_config</references>
        <referencedby refid="namespacepenify__hook_1_1config__command_1a240e5331681eb574ac319d7458783bde" compoundref="config__command_8py" startline="41" endline="98">penify_hook.config_command.handle_config</referencedby>
        <referencedby refid="classtests_1_1test__web__config_1_1TestWebConfig_1a06e600222e426b003850509cb1d3190a" compoundref="test__web__config_8py" startline="59" endline="95">tests.test_web_config.TestWebConfig.test_config_jira_web_server_setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacepenify__hook_1_1commands_1_1config__commands_1a5503d51c905e2f1b299b12d2a73bd812" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Optional[str]</type>
        <definition> Optional[str] penify_hook.commands.config_commands.get_token</definition>
        <argsstring>()</argsstring>
        <name>get_token</name>
        <qualifiedname>penify_hook.commands.config_commands.get_token</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get the API token based on priority:
1. Environment variable PENIFY_API_TOKEN from any .env file
2. Config file &apos;api_keys&apos; value

Returns:
    str or None: API token if found, None otherwise
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" line="553" column="1" bodyfile="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" bodystart="553" bodyend="582"/>
        <references refid="namespacepenify__hook_1_1commands_1_1config__commands_1a3caf2b062dd33b1f1d7ddc7224f0ff87" compoundref="config__commands_8py" startline="105" endline="118">penify_hook.commands.config_commands.get_env_var_or_default</references>
        <references refid="namespacepenify__hook_1_1commands_1_1config__commands_1a6559a82d0bf727703d550d1003d3ed20" compoundref="config__commands_8py" startline="68" endline="104">penify_hook.commands.config_commands.get_penify_config</references>
        <references refid="namespacepenify__hook_1_1commands_1_1config__commands_1aabe277132ce0bc0aacef951cf1dee2ae" compoundref="config__commands_8py" startline="22" endline="64">penify_hook.commands.config_commands.load_env_files</references>
        <referencedby refid="namespacepenify__hook_1_1commands_1_1commit__commands_1af4f739f524c38b437e4e47673d683e23" compoundref="commit__commands_8py" startline="128" endline="169">penify_hook.commands.commit_commands.handle_commit</referencedby>
        <referencedby refid="namespacepenify__hook_1_1commands_1_1doc__commands_1a2006ab13bff718ef783868a910c0b704" compoundref="doc__commands_8py" startline="125" endline="158">penify_hook.commands.doc_commands.handle_docgen</referencedby>
        <referencedby refid="classtests_1_1test__config__commands_1_1TestConfigCommands_1a6c0207be563c3de59a6d16277805114c" compoundref="test__config__commands_8py" startline="378" endline="409">tests.test_config_commands.TestConfigCommands.test_get_token_from_config</referencedby>
        <referencedby refid="classtests_1_1test__config__commands_1_1TestConfigCommands_1a3355f7d313bebaa71694387cf2bc5232" compoundref="test__config__commands_8py" startline="349" endline="374">tests.test_config_commands.TestConfigCommands.test_get_token_from_env</referencedby>
        <referencedby refid="classtests_1_1test__config__commands_1_1TestConfigCommands_1a400ca5d9fcdc159714e8df54920f9436" compoundref="test__config__commands_8py" startline="413" endline="450">tests.test_config_commands.TestConfigCommands.test_get_token_not_found</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/penify_hook/commands/config_commands.py" line="1" column="1"/>
  </compounddef>
</doxygen>
