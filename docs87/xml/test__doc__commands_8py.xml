<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="test__doc__commands_8py" kind="file" language="Python">
    <compoundname>test_doc_commands.py</compoundname>
    <innernamespace refid="namespacetests">tests</innernamespace>
    <innernamespace refid="namespacetests_1_1test__doc__commands">tests::test_doc_commands</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacetests_1_1test__doc__commands" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pytest</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>argparse<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ArgumentParser</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>unittest.mock<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>patch,<sp/>MagicMock</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">sys.path.insert(0,<sp/>os.path.abspath(os.path.join(os.path.dirname(__file__),<sp/></highlight><highlight class="stringliteral">&apos;..&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacepenify__hook_1_1commands_1_1doc__commands" kindref="compound">penify_hook.commands.doc_commands</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>generate_doc,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>setup_docgen_parser,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>handle_docgen</highlight></codeline>
<codeline lineno="13"><highlight class="normal">)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.file_analyzer.FileAnalyzerGenHook&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.git_analyzer.GitDocGenHook&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.folder_analyzer.FolderAnalyzerGenHook&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.api_client.APIClient&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.os.getcwd&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="namespacetests_1_1test__doc__commands_1a806110833eb0aad547156faf014b31d8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetests_1_1test__doc__commands_1a806110833eb0aad547156faf014b31d8" kindref="member">test_generate_doc_no_location</ref>(mock_getcwd,<sp/>mock_api_client,<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_folder_analyzer,<sp/>mock_file_analyzer,<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_git_analyzer):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Test<sp/>function<sp/>to<sp/>generate<sp/>documentation<sp/>without<sp/>location<sp/>information.</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>sets<sp/>up<sp/>mocks<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>API<sp/>client,<sp/>current<sp/>working</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>directory,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>Git<sp/>analyzer.<sp/>It<sp/>then<sp/>calls<sp/>the<sp/>`generate_doc`<sp/>function</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>a<sp/>fake<sp/>API<sp/>URL<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>token.<sp/>The<sp/>function<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>expected<sp/>to<sp/>initialize</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>the<sp/>API<sp/>client,<sp/>configure<sp/>the<sp/>Git<sp/>analyzer,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>run<sp/>it<sp/>without<sp/>any</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>location<sp/>information.</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_getcwd<sp/>(MagicMock):<sp/>Mock<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>os.getcwd().</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_api_client<sp/>(MagicMock):<sp/>Mock<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>creating<sp/>an<sp/>API<sp/>client.</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_folder_analyzer<sp/>(MagicMock):<sp/>Mock<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>folder<sp/>analysis.</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_file_analyzer<sp/>(MagicMock):<sp/>Mock<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>file<sp/>analysis.</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_git_analyzer<sp/>(MagicMock):<sp/>Mock<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>Git<sp/>analyzer<sp/>setup.</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_api_instance<sp/>=<sp/>MagicMock()</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_api_client.return_value<sp/>=<sp/>mock_api_instance</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_getcwd.return_value<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;/fake/current/dir&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_git_instance<sp/>=<sp/>MagicMock()</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_git_analyzer.return_value<sp/>=<sp/>mock_git_instance</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Call<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepenify__hook_1_1commands_1_1doc__commands_1a4daac68bc563432bf25c85dc78081a25" kindref="member">generate_doc</ref>(</highlight><highlight class="stringliteral">&apos;http://api.example.com&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;fake-token&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Assertions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_api_client.assert_called_once_with(</highlight><highlight class="stringliteral">&apos;http://api.example.com&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;fake-token&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_git_analyzer.assert_called_once_with(</highlight><highlight class="stringliteral">&apos;/fake/current/dir&apos;</highlight><highlight class="normal">,<sp/>mock_api_instance)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_git_instance.run.assert_called_once()</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>mock_file_analyzer.assert_not_called()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>mock_folder_analyzer.assert_not_called()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.git_analyzer.GitDocGenHook&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.folder_analyzer.FolderAnalyzerGenHook&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.api_client.APIClient&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.api_client.APIClient&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="namespacetests_1_1test__doc__commands_1a0e74c920f258f442914771164fe26b45" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetests_1_1test__doc__commands_1a0e74c920f258f442914771164fe26b45" kindref="member">test_generate_doc_file_location</ref>(mock_api_client,<sp/>mock_folder_analyzer,<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_file_analyzer,<sp/>mock_git_analyzer):</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Test<sp/>generating<sp/>a<sp/>documentation<sp/>file<sp/>location.</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>tests<sp/>the<sp/>process<sp/>of<sp/>generating<sp/>a<sp/>documentation<sp/>file</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>location<sp/>using<sp/>mock<sp/>objects<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>API<sp/>client,<sp/>folder<sp/>analyzer,<sp/>file</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>analyzer,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>Git<sp/>analyzer.<sp/>It<sp/>sets<sp/>up<sp/>the<sp/>necessary<sp/>mocks,<sp/>calls<sp/>the</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>`generate_doc`<sp/>function<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>specified<sp/>parameters,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>asserts<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>appropriate<sp/>methods<sp/>on<sp/>the<sp/>mock<sp/>objects<sp/>are<sp/>called<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>expected.</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_api_client<sp/>(MagicMock):<sp/>Mock<sp/>object<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>API<sp/>client.</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_folder_analyzer<sp/>(MagicMock):<sp/>Mock<sp/>object<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>folder<sp/>analyzer.</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_file_analyzer<sp/>(MagicMock):<sp/>Mock<sp/>object<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>file<sp/>analyzer.</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_git_analyzer<sp/>(MagicMock):<sp/>Mock<sp/>object<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>Git<sp/>analyzer.</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_api_instance<sp/>=<sp/>MagicMock()</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_api_client.return_value<sp/>=<sp/>mock_api_instance</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_file_instance<sp/>=<sp/>MagicMock()</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_file_analyzer.return_value<sp/>=<sp/>mock_file_instance</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Call<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepenify__hook_1_1commands_1_1doc__commands_1a4daac68bc563432bf25c85dc78081a25" kindref="member">generate_doc</ref>(</highlight><highlight class="stringliteral">&apos;http://api.example.com&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;fake-token&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;example.py&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Assertions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_api_client.assert_called_once_with(</highlight><highlight class="stringliteral">&apos;http://api.example.com&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;fake-token&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_file_analyzer.assert_called_once_with(</highlight><highlight class="stringliteral">&apos;example.py&apos;</highlight><highlight class="normal">,<sp/>mock_api_instance)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_file_instance.run.assert_called_once()</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_git_analyzer.assert_not_called()</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_folder_analyzer.assert_not_called()</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.GitDocGenHook&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.FileAnalyzerGenHook&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.FolderAnalyzerGenHook&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.api_client.APIClient&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="namespacetests_1_1test__doc__commands_1a4bb75610e40d94d42bc169b25403c186" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetests_1_1test__doc__commands_1a4bb75610e40d94d42bc169b25403c186" kindref="member">test_generate_doc_folder_location</ref>(mock_api_client,<sp/>mock_folder_analyzer,<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_file_analyzer,<sp/>mock_git_analyzer):</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Test<sp/>the<sp/>function<sp/>to<sp/>generate<sp/>documentation<sp/>for<sp/>a<sp/>folder<sp/>location.</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>It<sp/>sets<sp/>up<sp/>mock<sp/>objects<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>API<sp/>client,<sp/>folder<sp/>analyzer,<sp/>file<sp/>analyzer,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>Git<sp/>analyzer,<sp/>then<sp/>calls<sp/>the<sp/>`generate_doc`<sp/>function<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>specified</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>parameters.<sp/>Finally,<sp/>it<sp/>asserts<sp/>that<sp/>the<sp/>correct<sp/>methods<sp/>on<sp/>the<sp/>mock</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>objects<sp/>were<sp/>called<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>expected.</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_api_client<sp/>(MagicMock):<sp/>Mock<sp/>object<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>API<sp/>client.</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_folder_analyzer<sp/>(MagicMock):<sp/>Mock<sp/>object<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>folder<sp/>analyzer.</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_file_analyzer<sp/>(MagicMock):<sp/>Mock<sp/>object<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>file<sp/>analyzer.</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_git_analyzer<sp/>(MagicMock):<sp/>Mock<sp/>object<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>Git<sp/>analyzer.</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_api_instance<sp/>=<sp/>MagicMock()</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_api_client.return_value<sp/>=<sp/>mock_api_instance</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_folder_instance<sp/>=<sp/>MagicMock()</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_folder_analyzer.return_value<sp/>=<sp/>mock_folder_instance</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Call<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepenify__hook_1_1commands_1_1doc__commands_1a4daac68bc563432bf25c85dc78081a25" kindref="member">generate_doc</ref>(</highlight><highlight class="stringliteral">&apos;http://api.example.com&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;fake-token&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;src&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Assertions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_api_client.assert_called_once_with(</highlight><highlight class="stringliteral">&apos;http://api.example.com&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;fake-token&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_folder_analyzer.assert_called_once_with(</highlight><highlight class="stringliteral">&apos;src&apos;</highlight><highlight class="normal">,<sp/>mock_api_instance)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_folder_instance.run.assert_called_once()</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_git_analyzer.assert_not_called()</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_file_analyzer.assert_not_called()</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;sys.exit&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.GitDocGenHook&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.api_client.APIClient&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="namespacetests_1_1test__doc__commands_1aec76cc25c23476794234cdadbcaef0c0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetests_1_1test__doc__commands_1aec76cc25c23476794234cdadbcaef0c0" kindref="member">test_generate_doc_error_handling</ref>(mock_api_client,<sp/>mock_git_analyzer,<sp/>mock_exit):</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Generate<sp/>a<sp/>documentation<sp/>string<sp/>for<sp/>the<sp/>provided<sp/>code<sp/>snippet<sp/>using</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Google<sp/>Docstring<sp/>style.</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Short<sp/>one<sp/>line<sp/>description:<sp/>Test<sp/>function<sp/>to<sp/>ensure<sp/>proper<sp/>error</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>handling<sp/>during<sp/>API<sp/>calls<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>GitAnalyzer.<sp/><sp/>Multiline<sp/>long<sp/>description:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>This<sp/>test<sp/>function<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>designed<sp/>to<sp/>verify<sp/>that<sp/>the<sp/>generate_doc<sp/>function</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>handles<sp/>exceptions<sp/>correctly<sp/>when<sp/>an<sp/>error<sp/>occurs<sp/>during<sp/>API<sp/>interaction</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>GitAnalyzer.<sp/>It<sp/>sets<sp/>up<sp/>a<sp/>mock<sp/>API<sp/>client<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>a<sp/>mock<sp/>Git<sp/>analyzer,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>causing<sp/>the<sp/>analyzer<sp/>to<sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>an<sp/>exception<sp/>to<sp/>simulate<sp/>a<sp/>failure</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>condition.<sp/>The<sp/>function<sp/>then<sp/>asserts<sp/>that<sp/>the<sp/>exit<sp/>code<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>set<sp/>to<sp/>1<sp/>when</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>the<sp/>error<sp/>handling<sp/>mechanism<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>invoked.</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_api_client<sp/>(MagicMock):<sp/>A<sp/>mock<sp/>object<sp/>simulating<sp/>the<sp/>API<sp/>client.</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_git_analyzer<sp/>(MagicMock):<sp/>A<sp/>mock<sp/>object<sp/>simulating<sp/>the<sp/>Git<sp/>analyzer,<sp/>configured<sp/>to<sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>an</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exception.</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_exit<sp/>(MagicMock):<sp/>A<sp/>mock<sp/>object<sp/>representing<sp/>the<sp/>exit<sp/>function,<sp/>which<sp/>should<sp/>be<sp/>called</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>an<sp/>error<sp/>code.</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_api_instance<sp/>=<sp/>MagicMock()</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_api_client.return_value<sp/>=<sp/>mock_api_instance</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_git_analyzer.side_effect<sp/>=<sp/><ref refid="classException" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Test<sp/>error&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Call<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepenify__hook_1_1commands_1_1doc__commands_1a4daac68bc563432bf25c85dc78081a25" kindref="member">generate_doc</ref>(</highlight><highlight class="stringliteral">&apos;http://api.example.com&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;fake-token&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Assertions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_exit.assert_called_once_with(1)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="namespacetests_1_1test__doc__commands_1a0f27751d0ba2acfe40ef7e85bccf47d7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetests_1_1test__doc__commands_1a0f27751d0ba2acfe40ef7e85bccf47d7" kindref="member">test_setup_docgen_parser</ref>():</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Test<sp/>the<sp/>setup_docgen_parser<sp/>function<sp/>to<sp/>ensure<sp/>it<sp/>properly<sp/>configures</highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>ArgumentParser<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>docgen<sp/>options.</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>It<sp/>verifies<sp/>that<sp/>the<sp/>parser<sp/>correctly<sp/>sets<sp/>up<sp/>docgen<sp/>options<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>handles</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>different<sp/>subcommands<sp/>like<sp/></highlight><highlight class="stringliteral">&apos;install-hook&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;uninstall-hook&apos;</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>parser<sp/>=<sp/>ArgumentParser()</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><ref refid="namespacepenify__hook_1_1commands_1_1doc__commands_1acc7f4ead1b11951d885fa5c151c2cbe0" kindref="member">setup_docgen_parser</ref>(parser)</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>that<sp/>docgen<sp/>options<sp/>are<sp/>properly<sp/>set<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>args<sp/>=<sp/>parser.parse_args([</highlight><highlight class="stringliteral">&apos;-l&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;test_location&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>args.location<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;test_location&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>install-hook<sp/>subcommand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>args<sp/>=<sp/>parser.parse_args([</highlight><highlight class="stringliteral">&apos;install-hook&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;-l&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;hook_location&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>args.docgen_subcommand<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;install-hook&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>args.location<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;hook_location&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>uninstall-hook<sp/>subcommand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>args<sp/>=<sp/>parser.parse_args([</highlight><highlight class="stringliteral">&apos;uninstall-hook&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;-l&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;hook_location&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>args.docgen_subcommand<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;uninstall-hook&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>args.location<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;hook_location&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.install_git_hook&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.uninstall_git_hook&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.generate_doc&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.get_token&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;sys.exit&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="namespacetests_1_1test__doc__commands_1ab74688baa8c9b5ba302c2877a9789d05" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetests_1_1test__doc__commands_1ab74688baa8c9b5ba302c2877a9789d05" kindref="member">test_handle_docgen_install_hook</ref>(mock_exit,<sp/>mock_get_token,<sp/>mock_generate_doc,<sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_uninstall_hook,<sp/>mock_install_hook):</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Test<sp/>the<sp/>handling<sp/>of<sp/>the<sp/>&apos;install-hook&apos;<sp/>subcommand.</highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>sets<sp/>up<sp/>a<sp/>mock<sp/>environment<sp/>where<sp/>it<sp/>simulates<sp/>the</highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>execution<sp/>of<sp/>the<sp/>&apos;install-hook&apos;</highlight><highlight class="normal"><sp/>subcommand.<sp/>It<sp/>verifies<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>`mock_install_hook`<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>called<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>correct<sp/>arguments,<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>`mock_generate_doc`<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>`mock_uninstall_hook`<sp/>are<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>called.</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_exit<sp/>(MagicMock):<sp/>Mock<sp/>object<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sys.exit.</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_get_token<sp/>(MagicMock):<sp/>Mock<sp/>object<sp/>to<sp/>simulate<sp/>fetching<sp/>a<sp/>token.</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_generate_doc<sp/>(MagicMock):<sp/>Mock<sp/>object<sp/>to<sp/>simulate<sp/>generating<sp/>documentation.</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_uninstall_hook<sp/>(MagicMock):<sp/>Mock<sp/>object<sp/>to<sp/>simulate<sp/>uninstalling<sp/>a<sp/>hook.</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_install_hook<sp/>(MagicMock):<sp/>Mock<sp/>object<sp/>to<sp/>simulate<sp/>installing<sp/>a<sp/>hook.</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_get_token.return_value<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;fake-token&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Test<sp/>install-hook<sp/>subcommand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>args<sp/>=<sp/>MagicMock(docgen_subcommand=</highlight><highlight class="stringliteral">&apos;install-hook&apos;</highlight><highlight class="normal">,<sp/>location=</highlight><highlight class="stringliteral">&apos;hook_location&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepenify__hook_1_1commands_1_1doc__commands_1a2006ab13bff718ef783868a910c0b704" kindref="member">handle_docgen</ref>(args)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_install_hook.assert_called_once_with(</highlight><highlight class="stringliteral">&apos;hook_location&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;fake-token&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_generate_doc.assert_not_called()</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_uninstall_hook.assert_not_called()</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.install_git_hook&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.uninstall_git_hook&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.generate_doc&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.get_token&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;sys.exit&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="namespacetests_1_1test__doc__commands_1a1458af9ad0128c3ca1263b552fd5e482" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetests_1_1test__doc__commands_1a1458af9ad0128c3ca1263b552fd5e482" kindref="member">test_handle_docgen_uninstall_hook</ref>(mock_exit,<sp/>mock_get_token,<sp/>mock_generate_doc,<sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_uninstall_hook,<sp/>mock_install_hook):</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Test<sp/>the<sp/>uninstall-hook<sp/>subcommand<sp/>of<sp/>the<sp/>handle_docgen<sp/>function.</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>test<sp/>case<sp/>sets<sp/>up<sp/>a<sp/>mock<sp/>environment<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>verifies<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>uninstall-hook<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>called<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>correct<sp/>location,<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>generate_doc</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>install_hook<sp/>are<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>called.</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_exit<sp/>(MagicMock):<sp/>A<sp/>mock<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>exit<sp/>function.</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_get_token<sp/>(MagicMock):<sp/>A<sp/>mock<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>get_token<sp/>function.</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_generate_doc<sp/>(MagicMock):<sp/>A<sp/>mock<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>generate_doc<sp/>function.</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_uninstall_hook<sp/>(MagicMock):<sp/>A<sp/>mock<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>uninstall_hook<sp/>function.</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_install_hook<sp/>(MagicMock):<sp/>A<sp/>mock<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>install_hook<sp/>function.</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="247"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="248"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_get_token.return_value<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;fake-token&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Test<sp/>uninstall-hook<sp/>subcommand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>args<sp/>=<sp/>MagicMock(docgen_subcommand=</highlight><highlight class="stringliteral">&apos;uninstall-hook&apos;</highlight><highlight class="normal">,<sp/>location=</highlight><highlight class="stringliteral">&apos;hook_location&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepenify__hook_1_1commands_1_1doc__commands_1a2006ab13bff718ef783868a910c0b704" kindref="member">handle_docgen</ref>(args)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_uninstall_hook.assert_called_once_with(</highlight><highlight class="stringliteral">&apos;hook_location&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_generate_doc.assert_not_called()</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_install_hook.assert_not_called()</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.install_git_hook&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.uninstall_git_hook&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.generate_doc&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.get_token&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="namespacetests_1_1test__doc__commands_1ab158ffa48469b6c097a7a55fcb20c21a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetests_1_1test__doc__commands_1ab158ffa48469b6c097a7a55fcb20c21a" kindref="member">test_handle_docgen_generate</ref>(mock_get_token,<sp/>mock_generate_doc,<sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_uninstall_hook,<sp/>mock_install_hook):</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Test<sp/>the<sp/>direct<sp/>documentation<sp/>generation<sp/>functionality.</highlight></codeline>
<codeline lineno="266"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>tests<sp/>the<sp/>`handle_docgen`<sp/>function<sp/>when<sp/>no<sp/>subcommand<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>provided.<sp/>It<sp/>verifies<sp/>that<sp/>the<sp/>document<sp/>generation<sp/>hook<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>called<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>the<sp/>uninstall<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>install<sp/>hooks<sp/>are<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>called.</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_get_token<sp/>(MagicMock):<sp/>Mocked<sp/>function<sp/>to<sp/>get<sp/>authentication<sp/>token.</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_generate_doc<sp/>(MagicMock):<sp/>Mocked<sp/>function<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>generating<sp/>documentation.</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_uninstall_hook<sp/>(MagicMock):<sp/>Mocked<sp/>function<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>uninstalling<sp/>the<sp/>document<sp/>generation<sp/>hook.</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_install_hook<sp/>(MagicMock):<sp/>Mocked<sp/>function<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>installing<sp/>the<sp/>document<sp/>generation<sp/>hook.</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_get_token.return_value<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;fake-token&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Test<sp/>direct<sp/>documentation<sp/>generation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>args<sp/>=<sp/>MagicMock(docgen_subcommand=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>location=</highlight><highlight class="stringliteral">&apos;doc_location&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepenify__hook_1_1commands_1_1doc__commands_1a2006ab13bff718ef783868a910c0b704" kindref="member">handle_docgen</ref>(args)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_generate_doc.assert_called_once()</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_install_hook.assert_not_called()</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_uninstall_hook.assert_not_called()</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.get_token&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;sys.exit&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="namespacetests_1_1test__doc__commands_1af9b01e5fc89255cac96747fa081c442c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetests_1_1test__doc__commands_1af9b01e5fc89255cac96747fa081c442c" kindref="member">test_handle_docgen_no_token</ref>(mock_exit,<sp/>mock_get_token):</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Test<sp/>the<sp/>behavior<sp/>of<sp/>the<sp/>`handle_docgen`<sp/>function<sp/>when<sp/>no<sp/>token<sp/>is</highlight></codeline>
<codeline lineno="293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>provided.</highlight></codeline>
<codeline lineno="294"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="295"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>asserts<sp/>that<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>no<sp/>token<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>returned<sp/>by<sp/>`mock_get_token`,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>the<sp/>`handle_docgen`<sp/>function<sp/>will<sp/>call<sp/>`mock_exit`<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>a<sp/>status<sp/>code<sp/>of</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>1.</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_exit<sp/>(MagicMock):<sp/>A<sp/>MagicMock<sp/>object<sp/>simulating<sp/>the<sp/>`exit`<sp/>function.</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_get_token<sp/>(MagicMock):<sp/>A<sp/>MagicMock<sp/>object<sp/>simulating<sp/>the<sp/>`get_token`<sp/>function.</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="303"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="304"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Test<sp/>with<sp/>no<sp/>token</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_get_token.return_value<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>args<sp/>=<sp/>MagicMock(docgen_subcommand=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>location=</highlight><highlight class="stringliteral">&apos;doc_location&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepenify__hook_1_1commands_1_1doc__commands_1a2006ab13bff718ef783868a910c0b704" kindref="member">handle_docgen</ref>(args)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_exit.assert_called_once_with(1)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.os.getcwd&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.api_client.APIClient&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="namespacetests_1_1test__doc__commands_1a335e7fd4912192c7276cf31bbebc6eb0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetests_1_1test__doc__commands_1a335e7fd4912192c7276cf31bbebc6eb0" kindref="member">test_generate_doc_with_file_exception</ref>(mock_api_client,<sp/>mock_getcwd):</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Generate<sp/>documentation<sp/>from<sp/>a<sp/>Python<sp/>source<sp/>file.</highlight></codeline>
<codeline lineno="315"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>reads<sp/>a<sp/>Python<sp/>file<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>generates<sp/>a<sp/>docstring<sp/>based<sp/>on<sp/>its</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>content.<sp/>It<sp/>uses<sp/>mock<sp/>objects<sp/>to<sp/>simulate<sp/>API<sp/>calls<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>directory</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>operations<sp/>during<sp/>testing.</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_api_client<sp/>(unittest.mock.MagicMock):<sp/>A<sp/>mock<sp/>object<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>simulating<sp/>API<sp/>client<sp/>behavior.</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock_getcwd<sp/>(unittest.mock.MagicMock):<sp/>A<sp/>mock<sp/>object<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>simulating<sp/>the<sp/>current<sp/>working<sp/>directory<sp/>function.</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="324"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="325"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_api_client.side_effect<sp/>=<sp/><ref refid="classException" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;API<sp/>error&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_getcwd.return_value<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;/fake/current/dir&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Test<sp/>file<sp/>location<sp/>with<sp/>exception</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>pytest.raises(SystemExit):</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepenify__hook_1_1commands_1_1doc__commands_1a4daac68bc563432bf25c85dc78081a25" kindref="member">generate_doc</ref>(</highlight><highlight class="stringliteral">&apos;http://api.example.com&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;fake-token&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;example.py&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.commands.doc_commands.os.getcwd&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">@patch(&apos;penify_hook.api_client.APIClient&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="namespacetests_1_1test__doc__commands_1a64165ddfdb3071a88422f080f0e529a3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetests_1_1test__doc__commands_1a64165ddfdb3071a88422f080f0e529a3" kindref="member">test_generate_doc_with_folder_exception</ref>(mock_api_client,<sp/>mock_getcwd):</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Generate<sp/>documentation<sp/>from<sp/>a<sp/>given<sp/>API<sp/>endpoint<sp/>and<sp/>save<sp/>it<sp/>to<sp/>a</highlight></codeline>
<codeline lineno="338"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>folder.</highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="340"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>fetches<sp/>data<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>specified<sp/>API<sp/>endpoint,<sp/>processes</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>it,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>saves<sp/>the<sp/>generated<sp/>documentation<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>provided<sp/>folder.<sp/>If<sp/>an</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>occurs<sp/>during<sp/>the<sp/>fetching<sp/>process,<sp/>a<sp/>SystemExit<sp/>exception<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>raised<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>an<sp/>appropriate<sp/>message.</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_url<sp/>(str):<sp/>The<sp/>URL<sp/>of<sp/>the<sp/>API<sp/>endpoint<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>which<sp/>data<sp/>will<sp/>be<sp/>fetched.</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token<sp/>(str):<sp/>The<sp/>authentication<sp/>token<sp/>required<sp/>to<sp/>access<sp/>the<sp/>API.</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>folder_path<sp/>(str):<sp/>The<sp/>path<sp/>to<sp/>the<sp/>folder<sp/>where<sp/>the<sp/>documentation<sp/>will<sp/>be<sp/>saved.</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="350"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="351"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_api_client.side_effect<sp/>=<sp/><ref refid="classException" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;API<sp/>error&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>mock_getcwd.return_value<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;/fake/current/dir&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Test<sp/>folder<sp/>location<sp/>with<sp/>exception</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>pytest.raises(SystemExit):</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepenify__hook_1_1commands_1_1doc__commands_1a4daac68bc563432bf25c85dc78081a25" kindref="member">generate_doc</ref>(</highlight><highlight class="stringliteral">&apos;http://api.example.com&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;fake-token&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;src_folder&apos;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="/tmp/github_reposRepoArchDocGenContext/Penify-dev/penify-cli/tests/test_doc_commands.py"/>
  </compounddef>
</doxygen>
